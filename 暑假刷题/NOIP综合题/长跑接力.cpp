/*

长跑接力赛全程m公里，规定：每个队5人，每个人都必须跑而且只能跑一次，并且至少跑1公里、最多跑n公里，接力点必须在整公里处。刘教练挑选了5名队员，测试后得到每个人连续跑1、2、3、……、n公里的最短时间。他准备精心安排每个队员跑的公里数，使全队完成接力赛用时最短。你能帮教练做一个最佳方案吗？（数据保证最佳方案唯一）

（设：每人连续跑的路程越长速度越  慢，若有保持速度的，也绝不会变快。）

【输入】

 m  n    ( m≤5000 , n≤1000 )

 下接5行，每行n个整数 （表示每人连续跑1～n公里的最短时间，以空格相隔）

【输出】

 第一行：最短时间（时间≤maxlongint )

第二行：五个整数（表示安排1～5号队员各自连续跑的公里数，以空格相隔）

【样例】

输入：

25  10

333 700 1200 1710 2240 2613 3245 3956 4778 5899

300 610 960 1370 1800 2712 3834 4834 5998 7682

298 612 990 1560 2109 2896 3790 4747 5996 7654

289 577 890 1381 1976 2734 3876 5678 6890 9876

312 633 995 1467 1845 2634 3636 4812 5999 8123

输出：

9748

6 5 5 4 5

*/

#include <bits/stdc++.h>
using namespace std;

long long f[5][5000], project[5][5000], b[5];  // project表示到第i个人跑了j公里时第i个人的路程 
int main()
{
	long long m, n;
	cin >> m >> n;
	long long a[5][5000] = {0};
	for(long long i = 0; i < 5; i++){
		for(long long j = 1; j <= n; j++){
			cin >> a[i][j];
		}
	} 
	for(int i = 0; i <= 4; i++){
		for(long long j = 0; j <= m; j++){
			f[i][j] = 80000000;
		}
	}
	for(int i = 1; i <= n; i++){
		f[0][i] = a[0][i];
		project[0][i] = i;
	}
	f[0][0] = 0;
	for(long long i = 1; i <= 4; i++){
		for(long long k = 1; k <= n; k++){
			for(long long j = k+1; j <= m; j++){
				if(f[i][j]>f[i-1][j-k] + a[i][k]){
					f[i][j] = f[i-1][j-k] + a[i][k];
					project[i][j] = k;
				}
			}
		}
	}
	cout << f[4][m] << endl;
	b[4] = project[4][m];
	int start = m-b[4];
	for(int i = 3; i >= 0; i--){
		b[i] = project[i][start];
		start -= b[i];
	}
	for(int i = 0; i < 5; i++){
		cout << b[i] << " ";
	}
	return 0;
} 
